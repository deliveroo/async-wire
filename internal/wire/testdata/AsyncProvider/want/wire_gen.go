// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"example.com/bar"
	"golang.org/x/sync/errgroup"
)

// Injectors from wire.go:

func injectFoo(ctx context.Context) int {
	g, ctx := errgroup.WithContext(ctx)
	barBarChan := make(chan bar.Bar, 1)
	g.Go(func() error {
		barBar := bar.ProvideBar(ctx)
		select {
		case barBarChan <- barBar:
			break
		case <-ctx.Done():
			return ctx.Err()
		}
		return nil
	})
	int2Chan := make(chan int, 1)
	g.Go(func() error {
		var barBar bar.Bar
		select {
		case barBar = <-barBarChan:
			break
		case <-ctx.Done():
			return ctx.Err()
		}
		int2 := provideFoo(barBar)
		select {
		case int2Chan <- int2:
			break
		case <-ctx.Done():
			return ctx.Err()
		}
		return nil
	})
	g.Wait()
	int2 := <-int2Chan
	return int2
}
